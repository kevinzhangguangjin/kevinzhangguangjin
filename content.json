{"meta":{"title":"KevinZhang's Blog","subtitle":"关于 机器学习 建模评分","description":"非著名数据分析师","author":"KevinZhang","url":"http://yoursite.com"},"pages":[{"title":"about","date":"2019-07-25T04:35:01.000Z","updated":"2019-07-25T04:35:20.474Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2019-07-25T04:32:39.000Z","updated":"2019-07-25T04:34:10.491Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"friends","date":"2019-07-25T04:35:49.000Z","updated":"2019-07-25T04:36:06.907Z","comments":true,"path":"friends/index.html","permalink":"http://yoursite.com/friends/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-07-25T04:34:27.000Z","updated":"2019-07-25T04:34:44.602Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Github Trending and Good Stuff 2019-08-05","slug":"Github-Trending-and-Good-Stuff-2019-08-05","date":"2019-08-05T11:16:14.000Z","updated":"2019-08-05T11:28:03.500Z","comments":true,"path":"2019/08/05/github-trending-and-good-stuff-2019-08-05/","link":"","permalink":"http://yoursite.com/2019/08/05/github-trending-and-good-stuff-2019-08-05/","excerpt":"","text":"pythonwistbean / learn_python3_spiderpython爬虫教程系列、从0到1学习python爬虫，包括浏览器抓包，手机APP抓包，如 fiddler、mitmproxy，各种爬虫涉及的模块的使用，如：requests、beautifulSoup、selenium、appium、scrapy等，以及IP代理，验证码识别，Mysql，MongoDB数据库的python使用，多线程多进程爬虫的使用，css 爬虫加密逆向破解，JS爬虫逆向，爬虫项目实战实例等 Good Stuff python教程资源 williamFalcon / pytorch-lightningRapid research framework for PyTorch. The researcher’s version of Keras Good Stuff View the docs here Define a LightningModel Fit with a trainer Lightning automates all of the following (each is also configurable): Model saving Model loading Running grid search on a cluster Walltime auto-resubmit Fast dev run Inspect gradient norms Log GPU usage Make model overfit on subset of data Print the parameter count by layer Print which gradients are nan 16-bit mixed precision Multi-GPU Multi-node Single GPU Self-balancing architecture Display metrics in progress bar Log metric row every k batches Process position Tensorboard support Save a snapshot of all hyperparameters Snapshot code for a training run Write logs file to csv every k batches Accumulate gradients Force training for min or max epochs Force disable early stop Gradient Clipping Hooks Learning rate scheduling Use multiple optimizers (like GANs) Set how much of the training set to check (1-100%) Check validation every n epochs Hooks Set how much of the validation set to check Set how much of the test set to check Set validation check frequency within 1 training epoch Set the number of validation sanity steps donnemartin / system-design-primerLearn how to design large-scale systems. Prep for the system design interview. Includes Anki flashcards. Good Stuff A distributed systems reading list apachecn / AiLearningAiLearning: 机器学习 - MachineLearning - ML、深度学习 - DeepLearning - DL、自然语言处理 NLP Good Stuff Python 自然语言处理 第二版: https://usyiyi.github.io/nlp-py-2e-zh 推荐一个liuhuanyong大佬整理的nlp全面知识体系: https://liuhuanyong.github.io 斯坦福问题回答数据集（SQuAD）。回答有关维基百科文章的问题。 swiftSwiftyJSON / SwiftyJSONThe better way to deal with JSON data in Swift. Good Stuff 中文介绍 vsouza / awesome-iosA curated list of awesome iOS ecosystem, including Objective-C and Swift Projects Good Stuff Swifteducation - Teaching App Development with Swift Auto Layout Magic - Build 1 scene, let Auto Layout Magic generate the constraints for you! Scenes look great across all devices! Siesta - Elegant abstraction for RESTful resources that untangles stateful messes. An alternative to callback- and delegate-based networking. ios-driver - Test any iOS native, hybrid, or mobile web application using Selenium / WebDriver. Xcode Maven - The Xcode Maven Plugin can be used in order to run Xcode builds embedded in a Maven lifecycle. WWDC-Recap - A collection of session summaries in markdown format, from WWDC 19 &amp; 17. Swift Weekly Brief - A community-driven weekly newsletter about Swift.org. Curated by Jesse Squires and published for free every Thursday matteocrippa / awesome-swiftA collaborative list of awesome Swift libraries and resources. Feel free to contribute! Good Stuff Swift Weekly Brief - A multi author curated newsletter. Google - This style guide is based on Apple’s excellent Swift standard library style and also incorporates feedback from usage across multiple Swift projects within Google. Siesta - Elegant abstraction for REST APIs that untangles stateful messes. An alternative to callback- and delegate-based networking. Prototope - Library of lightweight interfaces for prototyping, bridged to JS. javascriptsahat / hackathon-starterA boilerplate for Node.js web applications Good Stuff Google Bootstrap - Google-styled theme for Bootstrap. Font Awesome Icons - It’s already part of the Hackathon Starter, so use this page as a reference. X-editable - Edit form elements inline. Alertify.js - Sweet looking alerts and browser dialogs. selectize.js - Styleable select elements and input tags. blog, More Bluemix samples lllyasviel / style2paintssketch + style = paints🎨 Good Stuff User Instruction: https://style2paints.github.io/ User Instruction: https://style2paints.github.io/ d07RiV / diablowebDiablo 1 for web browsers Good Stuff The project is hosted on https://d07RiV.github.io/diabloweb/ along with spawn.mpq from the shareware version (place it in the public folder to run locally). hta218 / get-a-room-api-docs📚APIs documentation for Room Finder Good Stuff Preview: https://hta218.github.io/get-a-room-api-docs/ lutzroeder / netronVisualizer for neural network, deep learning and machine learning models ReleasemacOS: Download the .dmg file or run brew cask install netronWindows: Download the .exe installer. mayeaux / videodownloaderA video and channel downloader that supports 110 websites, powered by Electron and youtube-dl ReleaseInstaller for OS X available: HereInstaller for Windows available: Here Manuel-777 / MTG-Arena-ToolAn MTG Arena deck and statistics manager Good Stuff Conic Gradient Polyfill by Lea Verou FaisalUmair / udemy-downloader-guiA desktop application for downloading Udemy Courses Release| Windows | x64 | 1.7.0 | Download|| Windows | x86 | 1.7.0 | Download| jc21 / nginx-proxy-managerDocker container for managing Nginx proxy hosts with a simple, powerful interface Good Stuff Beautiful and Secure Admin Interface based on Tabler marmelab / react-adminA frontend Framework for building admin applications running in the browser on top of REST/GraphQL APIs, using ES6, React and Material Design Good Stuff A frontend Framework for building admin applications running in the browser on top of REST/GraphQL APIs, using ES6, React and Material Design. Previously named admin-on-rest. Open sourced and maintained by marmelab. gosqshq / samplerA tool for shell commands execution, visualization and alerting. Configured with a simple YAML file. ReleaseDownload .exe txthinking / brookBrook is a cross-platform(Linux/MacOS/Windows/Android/iOS) proxy/vpn software Release| brook_windows_amd64.exe | Server &amp; Client | Windows | amd64 | CLI || brook_windows_386.exe | Server &amp; Client | Windows | 386 | CLI || Brook.dmg | Client | MacOS | amd64 | GUI || Brook.exe | Client | Windows | amd64 | GUI | xtaci / kcptunA Stable &amp; Secure Tunnel Based On KCP with N:M Multiplexing Good Stuff Reference: http://google.github.io/snappy/ http://google.github.io/snappy/ – A fast compressor/decompressor. http://http2.github.io/ – What is HTTP/2? centrifugal / centrifugoScalable real-time messaging in language-agnostic way Good Stuff See server documentation. pusher / oauth2_proxyA reverse proxy that provides authentication with Google, Github or other providers. Good Stuff Select a Provider and Register an OAuth Application with a Provider Configure OAuth2 Proxy using config file, command line options, or environment variables Configure SSL or Deploy behind a SSL endpoint (example provided for Nginx) Read the docs on our Docs site. gdrive-org / gdriveGoogle Drive CLI Client Release| gdrive-windows-386.exe | 2.1.0 | Window 32-bit | 4974290122f635d9c71875bc2c760e46b943c5ab || gdrive-windows-x64.exe | 2.1.0 | Windows 64-bit | 53780f9a4168c71fd9f3d429932207069d1dcf03 |","categories":[],"tags":[{"name":"machine learning","slug":"machine-learning","permalink":"http://yoursite.com/tags/machine-learning/"},{"name":"机器学习","slug":"机器学习","permalink":"http://yoursite.com/tags/机器学习/"},{"name":"Github Trending","slug":"Github-Trending","permalink":"http://yoursite.com/tags/Github-Trending/"},{"name":"good stuff","slug":"good-stuff","permalink":"http://yoursite.com/tags/good-stuff/"},{"name":"相关材料","slug":"相关材料","permalink":"http://yoursite.com/tags/相关材料/"}],"keywords":[]},{"title":"SAS中如何通过决策树选择重要入选变量","slug":"how-sas-em-select-important-variables-by-decision-tree","date":"2019-07-29T09:35:48.000Z","updated":"2019-07-29T09:37:39.200Z","comments":true,"path":"2019/07/29/how-sas-em-select-important-variables-by-decision-tree/","link":"","permalink":"http://yoursite.com/2019/07/29/how-sas-em-select-important-variables-by-decision-tree/","excerpt":"","text":"SAS中如何通过决策树选择重要入选变量以下在SAS的EM中通过一个案例来说明决策树选择重要变量的过程： 整体流程图 上图中从左到右分别为步骤1-4，其中步骤4是神经网络，其实不重要，重要的是前3步，第4步可以是其他节点。 选择案例数据 插入Input Data Source 节点，选择SAMPSIO.HMEQ作为源数据，并点Change钩上Use complete data as sample选择全部数据用作后续操作。 设置训练、验证数据比例 训练：67%，验证：33% 决策树设置 打开决策树设置，唯一要更改的是上图中圈红的地方，从0改成2（备选规则存储）。 然后关闭后运行决策树，运行结束后右键查看决策树结果： 在Score页面中子页面Variable Selection中可以看到变量的重要性排序。 小结好处是先把作用不大的变量直接筛选掉，跟在这个决策树后面的节点默认会排除掉决策树中已经rejected的变量。 如果变量特别多的时候，这种方法特别有效。","categories":[],"tags":[{"name":"machine learning","slug":"machine-learning","permalink":"http://yoursite.com/tags/machine-learning/"},{"name":"机器学习","slug":"机器学习","permalink":"http://yoursite.com/tags/机器学习/"},{"name":"SAS","slug":"SAS","permalink":"http://yoursite.com/tags/SAS/"}],"keywords":[]},{"title":"使用Excel建立机器学习评分模型","slug":"An-Excel-Machine-Learning-Approach-for-Score-Modeing","date":"2019-07-25T08:54:19.000Z","updated":"2019-07-25T08:57:03.434Z","comments":true,"path":"2019/07/25/an-excel-machine-learning-approach-for-score-modeing/","link":"","permalink":"http://yoursite.com/2019/07/25/an-excel-machine-learning-approach-for-score-modeing/","excerpt":"","text":"使用Excel建立机器学习评分模型准备写一份材料关于《使用Excel建立机器学习评分模型》，成型的Excel模板已经有了（笔者自己开发的），具体的一些效果截屏见文末。就是不知道有多少人愿意了解？ 以下是材料大纲： 为什么使用Excel Excel的普遍性 微软：2016年3月Office用户量超12亿 根据微软官方公布的数字显示，Office的全球用户量达到了12亿，而Excel是Office中常用的套件工具。 计算性能 Office Excel 2016 中包含 100 万行和 16,000 列的“大网格”，加上多项其他上限被调高，与 Excel 先前版本相比极大地增加了你可创建的工作表的大小。 Excel 中单个工作表可包含的单元格数现达到先前版本的 1,000 倍以上。 本案例需要 Office 2007 或以上版本。 其他优点 不用写代码 没有代码编程要求，只需要理解公式 更直观 Excel自带的表格以及图表能更清晰展示数据和模型 解释性强 案例采用Logistic Regression算法，并结合评分模型方法论。该方法论完整贯穿并展示模型的有效性、区分度、稳定性。数据变量对模型的贡献，以及能结合实际商业业务的理解。 文章范围 使用一个数据案例 拟采用GermanCredit数据集（文末截屏是另外一个数据集） 全部使用Excel实现模型建立过程 不需要额外的软件辅助，建模全流程都在Excel内完成 关于Logistic Regression 线性模型 Logistic Regression Excel 步骤实现 模型方法论 Binning WOE IV Odds KS 理解数据 观察数据 建模步骤 模型监控 PSI 排序性 无图无真相： 可以交互看到Binning表现 可以看到评分结果评价 按照标准评分卡参数设置，得到的变量每个属性的分 还有别的一些特点没有放出来，看大家有没有兴趣了。","categories":[],"tags":[{"name":"machine learning","slug":"machine-learning","permalink":"http://yoursite.com/tags/machine-learning/"},{"name":"机器学习","slug":"机器学习","permalink":"http://yoursite.com/tags/机器学习/"}],"keywords":[]},{"title":"TensorFlow 升级到2.0，那么项目的1.x程序怎么办？","slug":"Tensorflow-2-0-How-to-do-with-your-code","date":"2019-07-25T06:19:54.000Z","updated":"2019-07-25T07:21:17.327Z","comments":true,"path":"2019/07/25/tensorflow-2-0-how-to-do-with-your-code/","link":"","permalink":"http://yoursite.com/2019/07/25/tensorflow-2-0-how-to-do-with-your-code/","excerpt":"","text":"TensorFlow 升级到2.0，那么项目的1.x程序怎么办？目前，Tensorflow库正在经历着从推出以来最大规模的变化。TensorFLow 2.0 已经推出 beta 版本，同 TensorFlow 1.x 版本相比它带来了太多的改变。最大的问题在于不兼容了好多TensorFlow 1.x 版本的API。 怎么办？ 版本选择虽然TensorFlow的2.0版本中，增加了很多光鲜靓丽的新功能。但是TensorFlow 1.x目前比较稳定，建议使用TensorFlow 1.x版本开发实际项目，并跟进2.x版本所更新的技术。等到2.x版本更为稳定的时候，才考虑将实际项目切换到2.x。 应对方案TensorFlow框架的1.x版本与2.x版本差异较大。建议采用1.x与2.x版本共存的方式来解决。 Anaconda创建虚拟环境 查看目前的虚拟环境 使用conda info --envs查看当前环境信息 # conda environments: # base * /anaconda3 显示结果中可以看到，当前虚环境的名字是“base”，是Anaconda默认的Python环境。 使用python --version来查看Python版本 Python 3.7.3 可以知道，当前Python版本为3.7.3。 创建Python虚拟环境 conda create --name tf2 python=3.7.3 The following packages will be downloaded: package | build ---------------------------|----------------- ca-certificates-2019.5.15 | 0 133 KB certifi-2019.6.16 | py37_0 154 KB openssl-1.1.1c | h1de35cc_1 3.4 MB pip-19.1.1 | py37_0 1.8 MB setuptools-41.0.1 | py37_0 635 KB sqlite-3.29.0 | ha441bb4_0 2.4 MB wheel-0.33.4 | py37_0 39 KB ------------------------------------------------------------ Total: 8.5 MB The following NEW packages will be INSTALLED: ca-certificates pkgs/main/osx-64::ca-certificates-2019.5.15-0 certifi pkgs/main/osx-64::certifi-2019.6.16-py37_0 libcxx pkgs/main/osx-64::libcxx-4.0.1-hcfea43d_1 libcxxabi pkgs/main/osx-64::libcxxabi-4.0.1-hcfea43d_1 libedit pkgs/main/osx-64::libedit-3.1.20181209-hb402a30_0 libffi pkgs/main/osx-64::libffi-3.2.1-h475c297_4 ncurses pkgs/main/osx-64::ncurses-6.1-h0a44026_1 openssl pkgs/main/osx-64::openssl-1.1.1c-h1de35cc_1 pip pkgs/main/osx-64::pip-19.1.1-py37_0 python pkgs/main/osx-64::python-3.7.3-h359304d_0 readline pkgs/main/osx-64::readline-7.0-h1de35cc_5 setuptools pkgs/main/osx-64::setuptools-41.0.1-py37_0 sqlite pkgs/main/osx-64::sqlite-3.29.0-ha441bb4_0 tk pkgs/main/osx-64::tk-8.6.8-ha441bb4_0 wheel pkgs/main/osx-64::wheel-0.33.4-py37_0 xz pkgs/main/osx-64::xz-5.2.4-h1de35cc_4 zlib pkgs/main/osx-64::zlib-1.2.11-h1de35cc_3 Proceed ([y]/n)? 创建过程中会提示是否安装对应软件包，输入“Y”，则下载及安装软件包。 Downloading and Extracting Packages wheel-0.33.4 | 39 KB | ############################################################ | 100% openssl-1.1.1c | 3.4 MB | ############################################################ | 100% certifi-2019.6.16 | 154 KB | ############################################################ | 100% setuptools-41.0.1 | 635 KB | ############################################################ | 100% pip-19.1.1 | 1.8 MB | ############################################################ | 100% sqlite-3.29.0 | 2.4 MB | ############################################################ | 100% ca-certificates-2019 | 133 KB | ############################################################ | 100% Preparing transaction: done Verifying transaction: done Executing transaction: done # # To activate this environment, use # # $ conda activate tf2 # # To deactivate an active environment, use # # $ conda deactivate 虚拟环境tf2创建成功。 conda activate tf2 #将虚拟环境tf2作为当前的Python环境 conda deactivate #使用默认的Python环境 如果使用Windows，激活和取消激活虚拟环境的命令如下： activate tf2 deactivate 检查Python虚环境是否创建成功 conda info --envs 显示： # conda environments: # base * /anaconda3 tf2 /anaconda3/envs/tf2 可以看到，虚环境中多了一个“tf2”，表示创建成功。 删除Python虚环境 conda remove --name tf2 --all 运行以上命令即可删除tf2虚拟环境，不会有任何显示。可以使用conda info --envs再次检查虚拟环境情况。 在Python虚环境中安装TensorFlow 2.0 conda activate tf2 #激活tf2虚拟环境 pip install tensorflow==2.0.0-alpha0 #安装TensorFlow 2.0版 用工具进行代码版本升级 在TensorFlow 2.x版本中，提供了一个升级TensorFlow 1.x版本代码的工具——tf_upgrade_v2。该工具可以非常方便地将TensorFlow 1.x版本中编写的代码移植到TensorFlow 2.x中。 tf_upgrade_v2 --infile \"1.x代码文件\" -outfile \"2.x代码文件\" tf_upgrade_v2工具支持单文件转换和多文件批量转换两种方式。 单个代码升级 tf_upgrade_v2 --infile foo_v1.py --outfile foo_v2.py 批量代码升级 tf_upgrade_v2 -intree foo_v1 -outtree foo_v2 这里的foo_v1指的是1.x代码文件目录，foo_v2指的是升级后的2.x代码文件存放目录。 需要注意的是tf_upgrade_v2工具并不是万能的，它只能实现基本的API升级。一般在转化完成之后还需要手动二次修改。 2.x版本对于TF-Hub、T2T等库的影响 没有影响。这两个库同时支持1.x以及2.x。","categories":[],"tags":[{"name":"machine learning","slug":"machine-learning","permalink":"http://yoursite.com/tags/machine-learning/"},{"name":"机器学习","slug":"机器学习","permalink":"http://yoursite.com/tags/机器学习/"}],"keywords":[]}]}